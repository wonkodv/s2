Usabillity:
*   Draw Points of interest on Map
*   Add Hotkeys to:
    *   Make Screenshot and make a POI from it
    *   Mark current position on Map
*   configure which POIs to load
*   Manage POIs in the GUI
*   Grab Icons from Map and make temporary POIs

pois.toml

    [[POIs]]
    icon = "icons/food.png"
    location = [0.1313123, 0.12313]

    [[POIs]]
    icon = "icons/hideout.png"
    location = [ ...]

    [[POIs]]
    icon = "icons/screenshot.png"
    location = [ ... ]
    screenshot = "screenshots/DATETIME.png"
    description = "enter description here"


Precision
    Project search Box based on heading and speed
    When matching Keypoints, calculate Center, and match again against keypoints in that area

Error Recovery
    keep history of points
    add confidence to point
    ignore outliers



Performance
    Pipeline:
          > A   Get screenshot
        A > B   analyze screenshot
          > C   analyze map
        B,C > D match
        D,C2 >  validate and improve match

    Put Keypoints for 64 pixel squares in bins, stored in a dict and then match
    against several bins instead of detetcing keypoints again.


Tasks:
    Move to pipeline:
        create side-effect free functions:
            [x] global config
            [x] get_image()
            [ ] get_keypoints_from_minimap(minimap_image)
            [ ] match_keypoints(minimap_keypoints, map_keypoints)
            [ ] validate_match(match_points)
            [x] get_keypoints_from_map_area()
            [ ] update_position(new_position, confidence)

        [x] Create Pipeline Manager:
            1 thread per function
            get info from Q / sleep for a while
            call function
            put result on next Q

